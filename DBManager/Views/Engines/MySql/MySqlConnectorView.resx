<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="ConnectionLogo_PictureBox.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAJYAAACWCAYAAAA8AXHiAAAABGdBTUEAALGPC/xhBQAABrVJREFUeF7t
        3b+rXEUYxvFjIQoWEgXBwk6x1EKwUdL5F9hFk90rBCIEGztBLDTJnmv2ioVgYauIlZZio2AlgoKiSSHq
        TaKihSAYDJo4c+6cve+ZnXnPj5lzc272+4GXnJ13ZnLZ98kmEG5SAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAACArObljaqAbOpQyQKShEJVFzCYH6JZ+TXhQrpYgAgXkmjhkeGSBXSihcUPlSxA1ScoMlhdz2CD
        9QnJqbNHCBe6GRISwoVOhgSEcKFVLCBtoanPte3DxrotGqy20NR7Zq/c6VYAIRagtmBZdbiANTYYW4tj
        7tW+PsEiXFiTGoxVuF59wK0Axlb5SfInTmo4cYvKFSzChYYcgSBYWJMjFLPtK4QLTfPyxSyBIFhYkzNY
        88X7bgUbL9enTa57cAuxgXjmtfvdq2EIFtbkCgXhQgPBwigIFkaRKwyz8o3qrpPn7nYr2Gg5P2X41MIK
        wUJ288UZgoX8xggC4QLBwjj2QrDrXuVBsFAFYLa44F7tm5WPuqdhCNeGCwVgXl5PDgXB2nDhYKWHIscd
        OMRCAcgRCvsNrTnuwSE1WzzfGP68/HAViFn5g1sdhmBtuGaw9sIwL/9LDsX+XYRrI8nByyDkCER9n63Z
        4lO3io2wN/jvxfN+sOwnV6r6Tnk3NoAcePM5/bdDqb47552YuGrgi/XB5w7B8TP3rv0cuIXVw/aH7r/O
        Zax7MUGxYY8VAMKFUQLw3PJBF64f3Qo2zlifLKffvINPrU03VgDm5d+EC+nk3yPKwgY7+fbt7qm/E+VT
        wUDVBQxCkDAKAoXREC6Mog7WoQuX/MJTv/icdyW4vCxevrQsbvQpdzRod6d419z5Tax2l8VnbmuQuf+v
        rj9X0ATe037kFyxriNA9tg6QHF7fclesmLDcE9rXof5xV6yYtbRgWTfpPe1vVn7U+GL96iN0vq5ZueV2
        jUoObki5ayrm9Zd+v2+5qyrmdXqwLPm+Tpb8IkPVR+i8rJHtnm8OdUi5qyqhft9yV1XM6zzBslbv6+Il
        tzIxcvCh6iN0XtbI5NCqOl/87lq9mfNX1+4z5dpR2hnznC9Y1izD9zGOxh/+CfevqNS1tXjM7dTNy48b
        5+bbjzdfmxqZHFrq4Py7+twXO2ee8wbLOnHu+EG8t/2Fhh9aaxM6E1obkRxa6uBS7jL7L4TOmuf8wbJm
        i5/c04SEhh9aaxM6E1obkRxa6uBS7rqyUxwLnTXP4wTLOoD3t5/Q8ENrbRpntq+vr5mStJ5GOSeHljq4
        lLtuSrAmJzao2HpIbG9s3dJ6GuWcHFrq4FLuIlhWbFCx9ZDY3ti6pfU0yjk5tNTBpdxFsKzYoGLrIbG9
        sXVL62mUc3JoqcNLuYdgWcqgmr1zp9xqU2OPKWloT9NyTg6ua7mjDV32xBAsSxuU1qtpe4b2NC3ndneK
        03J4XcsdX2nrawiWpQ1K69W0PUN7mo7n5AC7ljta0XptCJalDWq2XUZ7lt/fev0J19kje7YkracZes5z
        6XzxiByyq99cm2AlaxuU1td6ltbXepqh5yLkoOWwY+tdECyrbVBaX+tZWl/raYaei5CDlsOOrXdBsKy2
        QWl9rWdpfa2nGXouQg5aDju23gXBsroMqrnnncBal3PNPVpPM/RchBy0HHZsvab1DypY7p7vct2XV5dB
        hfaE1nzaHq2nGXouoh6KP5zYuhTbs7sszobWzfPPofUhLi+Kh+2P9h7z831g6ouqMRldBhXaE1rzaXu0
        nmbouQg5aDlsf132arE9oTXr1+3iLrl+ZVk86Vq9yXtrZm3vL/8noeug/H2yYrR9Wk8z9FyAHLIt86v+
        mmtFQ+ML7PvDX3NbK1qvj/qs+fGieB58X35dB+XvkxWj7ZuX/671h5Rg39iUcteshPYMqMY/chvo9yp3
        TSNE5hdE9W1ncu3mUwbV4O+TFdO2z+8PKUEOYEB97q5ZCezpXe6qhtC+ruWuaISofr60U6T9B1FZKYNa
        4+/tuz/E39O3BDmAPqX9WSe0v2u5K4JC+7uUO14xr6+6x1W4pkMZ1Jr6v/lY1eJp1wlr7DXVZmvxntl3
        saWid8oBdKlflsVRd7SV2X/dP+/VNX/N/Bb1gjseZfZ95Z/Tyh2rmPuPhtYxhBKsKZAhYOCHycSD9edb
        xRHCdRhNPFiWHyzCNXV+qCYaLMsP1m5ZPORaGFUoJH0LWBMKSt8C1oSC0rVm5bfuFsATCkxbPbt9nzsN
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASFMX/pOwBSpVJz9cAAAAASUVORK5CYII=
</value>
  </data>
</root>