<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="ConnectionLogo_PictureBox.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        NCwAAAAASUVORK5CYII=
</value>
  </data>
</root>